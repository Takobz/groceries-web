parameters:
  - name: containerInstancePublicPort
    type: string
    default: '80'
  - name: containergroupName
    type: string
  - name: tag
    type: string
    default: 'latest'
  - name: dependsOn
    type: object
    default: []
  - name: imagesDetails
    type: object
    default: "[
      {
        'imageName': '$(postgresImageName)',
        'tag': 'latest',
        'port': $(postgresPort),
        'cpuCores': $(cpuCores),
        'memoryInGb': $(memoryInGb)
      },
      {
        'imageName': '$(clientImageName)',
        'tag': 'latest',
        'port': $(clientPort),
        'cpuCores': $(cpuCores),
        'memoryInGb': $(memoryInGb)
      },
      {
        'imageName': '$(webApiImageName)',
        'tag': 'latest',
        'port': $(webApiPort),
        'cpuCores': $(cpuCores),
        'memoryInGb': $(memoryInGb)
      },
      {
        'imageName': '$(nginxImageName)',
        'tag': 'latest',
        'port': $(nginxPort),
        'cpuCores': $(cpuCores),
        'memoryInGb': $(memoryInGb)
      }
    ]"
  

stages:
- stage: DeployAzureConatinerInstance
  displayName: 'Deploy Azure Container Instance and Images'
  jobs:
  - job: DeployAzureContainerInstance
    displayName: 'Deploy Azure Container Instance'
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Deploy Azure Container Instance'
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(serviceConnectionName)
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroupName)
        location: $(location)
        templateLocation: 'Linked artifact'
        csmFile: '$(Pipeline.Workspace)/s/infra-as-code/container-instance/container-instance.bicep'
        deploymentMode: 'Incremental'
        overrideParameters: >-
          -containerGroupName $(containergroupName)
          -containerRegistryName $(registryName)
          -port $(nginxPort)
          -imagesDetails ${{ parameters.imagesDetails }}
