parameters:
  - name: rgLocation
    type: string
    default: 'South Africa North'
  - name: deploymentMode
    type: string
    default: 'Incremental'
  - name: dependsOn
    type: object
    default: []

stages:
- stage: DeployAzureSQLFireWallRules
  displayName: 'Deploy Azure SQL Firewall Rules'
  dependsOn: ${{ parameters.dependsOn }}
  jobs:

  #webApi is deployment name of the api container app deployment.
  - job: DeployAzureSQLFireWallRules 
    displayName: 'Apply Azure SQL Firewall Rules'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: $(serviceConnectionName)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          ALLOWED_IPS=$(az deployment group show \
            -g $(resourceGroupName) \
            -n webApi \
            --query properties.outputs.containerAppOutboundIpAddress.value | jq -c '.')
          echo "##vso[task.setvariable variable=ALLOWED_IPS]$ALLOWED_IPS"
          echo $ALLOWED_IPS
      displayName: 'Get WebAPI IPs'

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Deploy Azure SQL Firewall Rules'
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(serviceConnectionName)
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(resourceGroupName)
        location: ${{ parameters.rgLocation }}
        templateLocation: 'Linked artifact'
        csmFile: '$(Pipeline.Workspace)/s/infra-as-code/azure-sql-firewall-rules/main.bicep'
        deploymentMode: ${{ parameters.deploymentMode }}
        overrideParameters: >-
          -serverName $(databaseServerName)
          -allowedIPs $(ALLOWED_IPS)