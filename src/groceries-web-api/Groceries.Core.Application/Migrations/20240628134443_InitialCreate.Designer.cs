// <auto-generated />
using System;
using Groceries.Core.Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Groceries.Core.Application.Migrations
{
    [DbContext(typeof(GroceriesDbContext))]
    [Migration("20240628134443_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            //This is not auto-generated code always add this manually
            //This is to account for the different data types between Postgres and Azure SQL
            var identifier = Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development" ?
                "uuid" : "uniqueidentifier";
            var datetime = Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT") == "Development" ?
                "timestamp with time zone" : "datetime2";

            modelBuilder.Entity("Groceries.Data.DataModels.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType(identifier);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType(datetime);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType(datetime);

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Groceries.Data.DataModels.GroceryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType(identifier);

                    b.Property<Guid>("CartId")
                        .HasColumnType(identifier);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType(datetime);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType(datetime);

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Groceries.Data.DataModels.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType(identifier);

                    b.Property<Guid>("CartId")
                        .HasColumnType(identifier);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType(datetime);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType(datetime);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType(datetime);

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Groceries.Data.DataModels.GroceryItem", b =>
                {
                    b.HasOne("Groceries.Data.DataModels.Cart", "Cart")
                        .WithMany("GroceryItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Groceries.Data.DataModels.Reminder", b =>
                {
                    b.HasOne("Groceries.Data.DataModels.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Groceries.Data.DataModels.Cart", b =>
                {
                    b.Navigation("GroceryItems");
                });
#pragma warning restore 612, 618
        }
    }
}
